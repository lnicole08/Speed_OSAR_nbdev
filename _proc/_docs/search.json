[
  {
    "objectID": "speedtest-finalised.html",
    "href": "speedtest-finalised.html",
    "title": "Speed",
    "section": "",
    "text": "#import relevant libraries\nimport sys\nimport os\nimport glob\n\nimport numpy as np\nimport pandas as pd\nimport matplotlib as mpl\nimport seaborn as sns\nimport datetime as dt\n\nimport matplotlib.pyplot as plt\n\nimport dabest\n#import osar\n\n\n#NOTE: SUPPRESSES WARNINGS!\n\nimport warnings\n\nwarnings.simplefilter(action=\"ignore\", category=RuntimeWarning)\n#warnings.simplefilter(action=\"default\", category=RuntimeWarning)\n\n\nFile path here:\n\nInput your file name here\n\n\naddNotes = \"MB011B-Gal4-UAS-CsChrimson\"\nbasegenotype = \"MB011B\"\nresponder = \"UAS-CsChrimson\"\n\n##CHECK DRIVE LETTER\n\n#filedirectory = \"D:\\\\Nicole Lee - HDD\\\\ACC Lab Dropbox\\\\ACC Lab\\\\Nicole Lee\\\\DATA\\\\OSAR\\\\\"\n#filedirectory = \"D:\\\\ACC Lab Dropbox\\\\ACC Lab\\\\Nicole Lee\\\\DATA\\\\OSAR\\\\\"\nfiledirectory = \"D:\\\\Nicole Lee - HDD\\\\ACC Lab Dropbox\\\\ACC Lab\\\\Nicole Lee\\\\DATA\\\\MBON_Chrimson_Farhan\\\\Files\\\\MBON-γ5\\\\\"\n\nbaseDirectory = filedirectory + addNotes\n\n#### sets up filename for later - make sure this is correct\n\nif len(addNotes) > 0:\n    addNotes = \"_\" + addNotes   \n#filename = baseDirectory + \"/\" + str(baseDirectory).split(\"/\", -1)[-1][7:] \nfilename = baseDirectory + \"\\\\\" + basegenotype\nfilename_AppendDT = \"_gen \" + dt.datetime.today().strftime('%Y-%m-%d')\n\n##### use this if you need to set filename manually\n#filename = baseDirectory + \"/\" + \"201230 R58E02-LexA;VT999036-Gal4 x Dop2R-RNAi;LexAOP-Chrimson_Female\"\n\nfilename = filename + addNotes + filename_AppendDT\n\nfilename\n\n'D:\\\\Nicole Lee - HDD\\\\ACC Lab Dropbox\\\\ACC Lab\\\\Nicole Lee\\\\DATA\\\\MBON_Chrimson_Farhan\\\\Files\\\\MBON-γ5\\\\MB011B-Gal4-UAS-CsChrimson\\\\MB011B_MB011B-Gal4-UAS-CsChrimson_gen 2022-10-25'\n\n\n\nresponder = \"Chrimson2\"\n\n\nif responder == \"Chrimson2\":\n    light_color = \"deeppink\"\n    colors = \"Reds\"\n    \nif responder == \"ACR\":\n    light_color = \"dodgerblue\"\n    colors = \"Greens\"\n\n\n#check for border shift\nosarAnalysis = osar.osar(baseDirectory,\n                        #border_shift_mm = 1.5,\n                        \n                         \n                        #countlog_folder = \"countlog_Full Only\",\n                         \n                        #countlog_folder = \"countlog_Half and Full\",\n                         driver = basegenotype)\n\nCreating borders for each fly...\nDone.\n\nProcessing CSV 36 of 36\nSummarising results for all flies...\nAll done.\n\n\n\nmy_color_palette3 = {\"Eighth; Sibling\" : \"lightgray\",\n                      \"Eighth; Offspring\"    : light_color,\n                    \"Quarter; Sibling\" : \"lightgray\",\n                      \"Quarter; Offspring\"    : light_color, \n                     \"Half; Sibling\" : \"lightgray\",\n                      \"Half; Offspring\"    : light_color,\n                     \"Full; Sibling\" : \"lightgray\",\n                      \"Full; Offspring\"    : light_color\n                     }\n\n\n\nSpeed analysis\n\nspeedratio2 = osarAnalysis.contrasts.log2_speed_ratio.light_speed_against_dark_speed(epoch='first')\n\nspeedratio2.mean_diff.plot(raw_marker_size=2, custom_palette = my_color_palette3, legend_kwargs=None, fig_size=(7,5)\n                          )\n\n#, swarm_ylim = (-20, 10), contrast_ylim = (-1, 1)\n\nsns.set(font_scale=0.7, style='ticks')\nspeedratio2.mean_diff\n\nC:\\Users\\lnico\\AppData\\Roaming\\Python\\Python39\\site-packages\\osar\\plot_helpers\\plot_helpers.py:204: FutureWarning: The `inplace` parameter in pandas.Categorical.remove_unused_categories is deprecated and will be removed in a future version.\n  plot_df[c].cat.remove_unused_categories(inplace=True)\nC:\\Users\\lnico\\anaconda3\\lib\\site-packages\\dabest\\_classes.py:285: FutureWarning: The `inplace` parameter in pandas.Categorical.remove_unused_categories is deprecated and will be removed in a future version.\n  plot_data[self.__xvar].cat.remove_unused_categories(inplace=True)\nC:\\Users\\lnico\\anaconda3\\lib\\site-packages\\dabest\\_classes.py:286: FutureWarning: The `inplace` parameter in pandas.Categorical.reorder_categories is deprecated and will be removed in a future version. Reordering categories will always return a new Categorical object.\n  plot_data[self.__xvar].cat.reorder_categories(all_plot_groups,\n\n\nDABEST v0.3.9999\n================\n                \nGood evening!\nThe current time is Tue Oct 25 21:00:25 2022.\n\nThe unpaired mean difference between Eighth; Sibling and Eighth; Offspring is 0.0107 [95%CI -0.00771, 0.0312].\nThe p-value of the two-sided permutation t-test is 0.249, calculated for legacy purposes only. \n\nThe unpaired mean difference between Quarter; Sibling and Quarter; Offspring is 0.0284 [95%CI 0.00275, 0.0662].\nThe p-value of the two-sided permutation t-test is 0.0274, calculated for legacy purposes only. \n\nThe unpaired mean difference between Half; Sibling and Half; Offspring is 0.0296 [95%CI 0.00781, 0.0485].\nThe p-value of the two-sided permutation t-test is 0.0012, calculated for legacy purposes only. \n\nThe unpaired mean difference between Full; Sibling and Full; Offspring is 0.0244 [95%CI -0.00625, 0.0508].\nThe p-value of the two-sided permutation t-test is 0.033, calculated for legacy purposes only. \n\n5000 bootstrap samples were taken; the confidence interval is bias-corrected and accelerated.\nAny p-value reported is the probability of observing theeffect size (or greater),\nassuming the null hypothesis ofzero difference is true.\nFor each p-value, 5000 reshuffles of the control and test labels were performed.\n\nTo get the results of all valid statistical tests, use `.mean_diff.statistical_tests`\n\n\nC:\\Users\\lnico\\anaconda3\\lib\\site-packages\\IPython\\core\\pylabtools.py:151: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.\n  fig.canvas.print_figure(bytes_io, **kw)\n\n\n\n\n\n\n\nOSAR analysis\n\nosarAnalysis_PI = osarAnalysis.contrasts.pi.time_spent_in_light(baseline_corrected=\"False\", epoch='first')\nosarAnalysis_PI\n\nC:\\Users\\lnico\\AppData\\Roaming\\Python\\Python39\\site-packages\\osar\\plot_helpers\\plot_helpers.py:204: FutureWarning: The `inplace` parameter in pandas.Categorical.remove_unused_categories is deprecated and will be removed in a future version.\n  plot_df[c].cat.remove_unused_categories(inplace=True)\nC:\\Users\\lnico\\anaconda3\\lib\\site-packages\\dabest\\_classes.py:285: FutureWarning: The `inplace` parameter in pandas.Categorical.remove_unused_categories is deprecated and will be removed in a future version.\n  plot_data[self.__xvar].cat.remove_unused_categories(inplace=True)\nC:\\Users\\lnico\\anaconda3\\lib\\site-packages\\dabest\\_classes.py:286: FutureWarning: The `inplace` parameter in pandas.Categorical.reorder_categories is deprecated and will be removed in a future version. Reordering categories will always return a new Categorical object.\n  plot_data[self.__xvar].cat.reorder_categories(all_plot_groups,\n\n\nDABEST v0.3.9999\n================\n                \nGood evening!\nThe current time is Tue Oct 25 21:00:40 2022.\n\nEffect size(s) with 95% confidence intervals will be computed for:\n1. Eighth; Offspring minus Eighth; Sibling\n2. Quarter; Offspring minus Quarter; Sibling\n3. Half; Offspring minus Half; Sibling\n4. Full; Offspring minus Full; Sibling\n\n5000 resamples will be used to generate the effect size bootstraps.\n\n\n\nosarFig_PI_Meandiff = osarAnalysis_PI.mean_diff.plot(color_col='genotype', \n                               swarm_ylim=(-1.05,1.05),\n                               contrast_ylim=(-1.05,1.05),\n                             custom_palette= colors,\n                               fig_size=(7,5),\n                               #fig_size=(10,7),\n                               swarm_label=\"PI\",\n                               raw_marker_size= 2 )\nsns.set(font_scale=0.75)\nosarAnalysis_PI.mean_diff\n\nDABEST v0.3.9999\n================\n                \nGood evening!\nThe current time is Tue Oct 25 21:00:43 2022.\n\nThe unpaired mean difference between Eighth; Sibling and Eighth; Offspring is -0.0762 [95%CI -0.255, 0.0931].\nThe p-value of the two-sided permutation t-test is 0.336, calculated for legacy purposes only. \n\nThe unpaired mean difference between Quarter; Sibling and Quarter; Offspring is 0.0953 [95%CI -0.0871, 0.271].\nThe p-value of the two-sided permutation t-test is 0.252, calculated for legacy purposes only. \n\nThe unpaired mean difference between Half; Sibling and Half; Offspring is 0.0343 [95%CI -0.12, 0.183].\nThe p-value of the two-sided permutation t-test is 0.632, calculated for legacy purposes only. \n\nThe unpaired mean difference between Full; Sibling and Full; Offspring is 0.0504 [95%CI -0.131, 0.236].\nThe p-value of the two-sided permutation t-test is 0.54, calculated for legacy purposes only. \n\n5000 bootstrap samples were taken; the confidence interval is bias-corrected and accelerated.\nAny p-value reported is the probability of observing theeffect size (or greater),\nassuming the null hypothesis ofzero difference is true.\nFor each p-value, 5000 reshuffles of the control and test labels were performed.\n\nTo get the results of all valid statistical tests, use `.mean_diff.statistical_tests`\n\n\nC:\\Users\\lnico\\anaconda3\\lib\\site-packages\\IPython\\core\\pylabtools.py:151: UserWarning: This figure includes Axes that are not compatible with tight_layout, so results might be incorrect.\n  fig.canvas.print_figure(bytes_io, **kw)"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Speed_OSAR_nbdev",
    "section": "",
    "text": "This file will become your README and also the index of your documentation."
  },
  {
    "objectID": "index.html#install",
    "href": "index.html#install",
    "title": "Speed_OSAR_nbdev",
    "section": "Install",
    "text": "Install\npip install Speed_OSAR_nbdev"
  },
  {
    "objectID": "index.html#how-to-use",
    "href": "index.html#how-to-use",
    "title": "Speed_OSAR_nbdev",
    "section": "How to use",
    "text": "How to use\nHello world!\n\n1+1\n\n2"
  }
]